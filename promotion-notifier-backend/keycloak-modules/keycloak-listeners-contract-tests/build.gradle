plugins {
    id 'io.spring.dependency-management'
}


sourceSets {
    contractTest {
        groovy {
            srcDirs = ["${projectDir}/src/contractTest/groovy"]
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            resources.srcDirs = ["${projectDir}/src/contractTest/resources"]
        }
    }
}

configurations {
    contractTestImplementation.extendsFrom testImplementation
    contractTestRuntimeOnly.extendsFrom testRuntimeOnly
}


dependencies {
    testImplementation project(':pn-shared-test-modules:keycloak-test-container')
    contractTestImplementation group: 'org.spockframework', name: 'spock-spring'
    contractTestImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner:${springCloudVersion}"
    contractTestImplementation project(":keycloak-modules:keycloak-listeners")
    contractTestImplementation project(":pn-shared-test-modules:common")
    contractTestRuntimeClasspath getStubsJarFromProject(':pn-user-service')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudVersion}"
    }
}

tasks.register('contractTest', Test) {
    useJUnitPlatform()
    description = 'Runs contract tests.'
    group = 'verification'

    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    testLogging {

        events("passed", "skipped", "failed")
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

tasks.findByName('test').dependsOn('contractTest')
