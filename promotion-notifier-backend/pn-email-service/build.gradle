plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

sourceSets {
    integTest {
        groovy {
            srcDirs = ["${projectDir}/src/integTest/groovy"]
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            resources.srcDirs = ["${projectDir}/src/integTest/resources"]
        }
    }
    contractTest {
        groovy {
            srcDirs = ["${projectDir}/src/contractTest/groovy"]
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            resources.srcDirs = ["${projectDir}/src/contractTest/resources"]
        }
    }
}

configurations {
    integTestImplementation.extendsFrom testImplementation
    integTestRuntimeOnly.extendsFrom testRuntimeOnly

    contractTestImplementation.extendsFrom testImplementation
    contractTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '3.0.15.RELEASE'
    implementation "io.micrometer:micrometer-registry-prometheus"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.spockframework', name: 'spock-spring'
    testImplementation group: 'org.awaitility', name: 'awaitility', version: "${awaitilityVersion}"
    testImplementation "org.testcontainers:rabbitmq:${testcontainersVersion}"
    testImplementation "org.testcontainers:spock:${testcontainersVersion}"
    integTestImplementation group: 'com.icegreen', name: 'greenmail', version: '1.6.11'
    integTestImplementation group: 'org.apache.commons', name: 'commons-email', version: '1.5'

    contractTestImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'

}


tasks.register('integrationTest', Test) {
    useJUnitPlatform()
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    testLogging {

        events("passed", "skipped", "failed")
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

tasks.register('contractTest', Test) {
    useJUnitPlatform()
    description = 'Runs contract tests.'
    group = 'verification'

    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    testLogging {

        events("passed", "skipped", "failed")
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

tasks.findByName('integrationTest').dependsOn('contractTest')

idea {
    module {
        sourceDirs -= project.sourceSets.integTest.groovy.srcDirs
        testSourceDirs += project.sourceSets.integTest.groovy.srcDirs
    }
}