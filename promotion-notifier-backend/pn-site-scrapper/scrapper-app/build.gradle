import org.springframework.cloud.contract.verifier.config.TestFramework

plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.springframework.cloud.contract'
    id 'maven-publish'
    id 'com.google.cloud.tools.jib'
}

contracts {
    baseClassForTests = "io.mkrzywanski.pn.scrapper.contract.BaseClass"
    testFramework = TestFramework.SPOCK
}

contractTest {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "Results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            boolean skipTests = Boolean.parseBoolean(project.findProperty('SKIP_TESTS') ?: "false")
            if (result.testCount == 0 && !skipTests) {
                throw new IllegalStateException("No tests were found. Failing the build")
            }
        }
    }
}

sourceSets {
    integTest {
        groovy {
            srcDirs = ["${projectDir}/src/integTest/groovy"]
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            resources.srcDirs = ["${projectDir}/src/integTest/resources"]
        }
    }
}

configurations {
    integTestImplementation.extendsFrom testImplementation
    integTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    implementation project(":pn-site-scrapper:scrapper-domain")
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "io.micrometer:micrometer-registry-prometheus"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-spring'
    testImplementation "org.testcontainers:rabbitmq:${testcontainersVersion}"
    testImplementation "org.testcontainers:spock:${testcontainersVersion}"

    integTestImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8-standalone', version: "2.35.0"
    integTestImplementation "org.awaitility:awaitility:${awaitilityVersion}"
    integTestImplementation project(":pn-shared-test-modules:testcontainers-extended")

    contractTestImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'

    runtimeOnly 'net.logstash.logback:logstash-logback-encoder:7.4'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudVersion}"
    }
}

tasks.register('integrationTest', Test) {
    useJUnitPlatform()
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    testLogging {

        events("passed", "skipped", "failed")
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

idea {
    module {
        sourceDirs -= project.sourceSets.integTest.groovy.srcDirs
        testSourceDirs += project.sourceSets.integTest.groovy.srcDirs
    }
}

bootJar {
    classifier = 'boot'
}

checkstyleContractTest {
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact bootJar
            artifact verifierStubsJar
            from components.java
        }
    }
}

jib {
    from {
        image = "${baseDockerImage}"
    }
    to {
        tags = ["latest"]
    }
}